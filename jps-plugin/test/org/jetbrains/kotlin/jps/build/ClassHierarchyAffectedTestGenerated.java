/*
 * Copyright 2010-2015 JetBrains s.r.o.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package org.jetbrains.kotlin.jps.build;

import com.intellij.testFramework.TestDataPath;
import org.jetbrains.kotlin.test.JUnit3RunnerWithInners;
import org.jetbrains.kotlin.test.KotlinTestUtils;
import org.jetbrains.kotlin.test.TestMetadata;
import org.junit.runner.RunWith;

import java.io.File;
import java.util.regex.Pattern;

/** This class is generated by {@link org.jetbrains.kotlin.generators.tests.TestsPackage}. DO NOT MODIFY MANUALLY */
@SuppressWarnings("all")
@TestMetadata("jps-plugin/testData/incremental/classHierarchyAffected")
@TestDataPath("$PROJECT_ROOT")
@RunWith(JUnit3RunnerWithInners.class)
public class ClassHierarchyAffectedTestGenerated extends AbstractClassHierarchyAffectedTest {
    public void testAllFilesPresentInClassHierarchyAffected() throws Exception {
        KotlinTestUtils.assertAllTestsPresentByMetadata(this.getClass(), new File("jps-plugin/testData/incremental/classHierarchyAffected"), Pattern.compile("^([^\\.]+)$"), true);
    }

    @TestMetadata("annotationListChanged")
    public void testAnnotationListChanged() throws Exception {
        String fileName = KotlinTestUtils.navigationMetadata("jps-plugin/testData/incremental/classHierarchyAffected/annotationListChanged/");
        doTest(fileName);
    }

    @TestMetadata("bridgeGenerated")
    public void testBridgeGenerated() throws Exception {
        String fileName = KotlinTestUtils.navigationMetadata("jps-plugin/testData/incremental/classHierarchyAffected/bridgeGenerated/");
        doTest(fileName);
    }

    @TestMetadata("classBecameFinal")
    public void testClassBecameFinal() throws Exception {
        String fileName = KotlinTestUtils.navigationMetadata("jps-plugin/testData/incremental/classHierarchyAffected/classBecameFinal/");
        doTest(fileName);
    }

    @TestMetadata("classBecamePrivate")
    public void testClassBecamePrivate() throws Exception {
        String fileName = KotlinTestUtils.navigationMetadata("jps-plugin/testData/incremental/classHierarchyAffected/classBecamePrivate/");
        doTest(fileName);
    }

    @TestMetadata("constructorVisibilityChanged")
    public void testConstructorVisibilityChanged() throws Exception {
        String fileName = KotlinTestUtils.navigationMetadata("jps-plugin/testData/incremental/classHierarchyAffected/constructorVisibilityChanged/");
        doTest(fileName);
    }

    @TestMetadata("flagsAndMemberInDifferentClassesChanged")
    public void testFlagsAndMemberInDifferentClassesChanged() throws Exception {
        String fileName = KotlinTestUtils.navigationMetadata("jps-plugin/testData/incremental/classHierarchyAffected/flagsAndMemberInDifferentClassesChanged/");
        doTest(fileName);
    }

    @TestMetadata("jvmNameChanged")
    public void testJvmNameChanged() throws Exception {
        String fileName = KotlinTestUtils.navigationMetadata("jps-plugin/testData/incremental/classHierarchyAffected/jvmNameChanged/");
        doTest(fileName);
    }

    @TestMetadata("methodAdded")
    public void testMethodAdded() throws Exception {
        String fileName = KotlinTestUtils.navigationMetadata("jps-plugin/testData/incremental/classHierarchyAffected/methodAdded/");
        doTest(fileName);
    }

    @TestMetadata("methodAnnotationAdded")
    public void testMethodAnnotationAdded() throws Exception {
        String fileName = KotlinTestUtils.navigationMetadata("jps-plugin/testData/incremental/classHierarchyAffected/methodAnnotationAdded/");
        doTest(fileName);
    }

    @TestMetadata("methodNullabilityChanged")
    public void testMethodNullabilityChanged() throws Exception {
        String fileName = KotlinTestUtils.navigationMetadata("jps-plugin/testData/incremental/classHierarchyAffected/methodNullabilityChanged/");
        doTest(fileName);
    }

    @TestMetadata("methodParameterDefaultValueChanged")
    public void testMethodParameterDefaultValueChanged() throws Exception {
        String fileName = KotlinTestUtils.navigationMetadata("jps-plugin/testData/incremental/classHierarchyAffected/methodParameterDefaultValueChanged/");
        doTest(fileName);
    }

    @TestMetadata("methodParameterWithDefaultValueAdded")
    public void testMethodParameterWithDefaultValueAdded() throws Exception {
        String fileName = KotlinTestUtils.navigationMetadata("jps-plugin/testData/incremental/classHierarchyAffected/methodParameterWithDefaultValueAdded/");
        doTest(fileName);
    }

    @TestMetadata("methodRemoved")
    public void testMethodRemoved() throws Exception {
        String fileName = KotlinTestUtils.navigationMetadata("jps-plugin/testData/incremental/classHierarchyAffected/methodRemoved/");
        doTest(fileName);
    }

    @TestMetadata("multiModuleCircular")
    public void testMultiModuleCircular() throws Exception {
        String fileName = KotlinTestUtils.navigationMetadata("jps-plugin/testData/incremental/classHierarchyAffected/multiModuleCircular/");
        doTest(fileName);
    }

    @TestMetadata("multiModuleExported")
    public void testMultiModuleExported() throws Exception {
        String fileName = KotlinTestUtils.navigationMetadata("jps-plugin/testData/incremental/classHierarchyAffected/multiModuleExported/");
        doTest(fileName);
    }

    @TestMetadata("multiModuleSimple")
    public void testMultiModuleSimple() throws Exception {
        String fileName = KotlinTestUtils.navigationMetadata("jps-plugin/testData/incremental/classHierarchyAffected/multiModuleSimple/");
        doTest(fileName);
    }

    @TestMetadata("propertyNullabilityChanged")
    public void testPropertyNullabilityChanged() throws Exception {
        String fileName = KotlinTestUtils.navigationMetadata("jps-plugin/testData/incremental/classHierarchyAffected/propertyNullabilityChanged/");
        doTest(fileName);
    }

    @TestMetadata("supertypesListChanged")
    public void testSupertypesListChanged() throws Exception {
        String fileName = KotlinTestUtils.navigationMetadata("jps-plugin/testData/incremental/classHierarchyAffected/supertypesListChanged/");
        doTest(fileName);
    }

    @TestMetadata("typeParameterListChanged")
    public void testTypeParameterListChanged() throws Exception {
        String fileName = KotlinTestUtils.navigationMetadata("jps-plugin/testData/incremental/classHierarchyAffected/typeParameterListChanged/");
        doTest(fileName);
    }

}
